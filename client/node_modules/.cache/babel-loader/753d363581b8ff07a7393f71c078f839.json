{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\parte\\\\Desktop\\\\Ethereum Projects\\\\faucet3_brownie\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useCallback } from \"react\";\nimport map from \"./artifacts/deployments/map.json\";\nimport FaucetArtifact from \"./artifacts/contracts/Faucet.json\";\nimport { ethers } from \"ethers\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const address = map[1337][\"Faucet\"][0];\n  const faucetABI = FaucetArtifact.abi;\n  const [web3Api, setWeb3Api] = useState({\n    provider: null,\n    contract: null\n  });\n  const [account, setAccount] = useState(null);\n  const [balance, setBalance] = useState(null);\n\n  function timeout(delay) {\n    return new Promise(res => setTimeout(res, delay));\n  }\n\n  useEffect(() => {\n    const loadProvider = async () => {\n      console.log(\"1\");\n      let detectProvider = await detectEthereumProvider();\n\n      if (detectProvider) {\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const contract = new ethers.Contract(address, faucetABI, provider);\n        setWeb3Api({\n          provider,\n          contract\n        });\n      } else {\n        console.log(\"Please install metamask\");\n      }\n    };\n\n    loadProvider();\n  }, []);\n  useEffect(() => {\n    const getAccounts = async () => {\n      const accounts = await web3Api.provider.getSigner().getAddress();\n      console.log(\"2\");\n      setAccount(accounts);\n    }; // Will only run once the ETHERS.JS provider is loaded.\n\n\n    web3Api.provider && getAccounts();\n  }, [web3Api.provider]);\n  useEffect(() => {\n    const loadBalance = async () => {\n      console.log(3);\n      const balance = await web3Api.provider.getBalance(address);\n      setBalance(ethers.utils.formatEther(balance));\n    }; // Will only run once the contract is loaded.\n\n\n    web3Api.contract && loadBalance();\n  }, [web3Api]); // changes the function only when web3Api changes otherwise uses the cached version\n\n  const addFunds = useCallback(async () => {\n    const signer = await web3Api.provider.getSigner();\n    const FaucetContract = new ethers.Contract(address, faucetABI, signer);\n    await FaucetContract.addFunds({\n      from: signer.getAddress(),\n      value: \"700000000000000000\"\n    });\n  }, [web3Api, address, faucetABI]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-full flex justify-center items-center bg-slate-200\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mr-2\",\n            children: \"Account:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), account ? account : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: async () => {\n              await web3Api.provider.send(\"eth_requestAccounts\", []);\n            },\n            className: \"connectButton\",\n            children: \"Connect Wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-[36px]\",\n          children: [\"Current Balance - \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: balance\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 31\n          }, this), \" ETH\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addFunds,\n          className: \"actionButton bg-green-200 hover:bg-green-500 text-green-500 \",\n          children: \"Donate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"actionButton bg-red-200 hover:bg-red-500  text-red-500 \",\n          children: \"Withdraw\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), \")\"]\n  }, void 0, true);\n} // <div className=\"flex items-center justify-center h-full\">\n//   <a\n//     className=\"bg-gray-800 hover:bg-gray-700 border-b-4 border-black hover:border-gray-800 text-white text-center py-2 px-4 rounded\"\n//     rel=\"noreferrer\"\n//     href=\"https://metamask.io/download\"\n//     target=\"_blank\"\n//   >\n//     Install Metamask\n//   </a>\n// </div>;\n\n_s(App, \"ePqIZ8Ub468zAfF6ydJPwCXW+QA=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/parte/Desktop/Ethereum Projects/faucet3_brownie/client/src/App.js"],"names":["useEffect","useState","useCallback","map","FaucetArtifact","ethers","detectEthereumProvider","App","address","faucetABI","abi","web3Api","setWeb3Api","provider","contract","account","setAccount","balance","setBalance","timeout","delay","Promise","res","setTimeout","loadProvider","console","log","detectProvider","providers","Web3Provider","window","ethereum","Contract","getAccounts","accounts","getSigner","getAddress","loadBalance","getBalance","utils","formatEther","addFunds","signer","FaucetContract","from","value","send"],"mappings":"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","sourcesContent":["import { useEffect, useState, useCallback } from \"react\";\nimport map from \"./artifacts/deployments/map.json\";\nimport FaucetArtifact from \"./artifacts/contracts/Faucet.json\";\nimport { ethers } from \"ethers\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\n\nexport default function App() {\n  const address = map[1337][\"Faucet\"][0];\n  const faucetABI = FaucetArtifact.abi;\n  const [web3Api, setWeb3Api] = useState({\n    provider: null,\n    contract: null,\n  });\n\n  const [account, setAccount] = useState(null);\n  const [balance, setBalance] = useState(null);\n\n  function timeout(delay) {\n    return new Promise((res) => setTimeout(res, delay));\n  }\n\n  useEffect(() => {\n    const loadProvider = async () => {\n      console.log(\"1\");\n      let detectProvider = await detectEthereumProvider();\n\n      if (detectProvider) {\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const contract = new ethers.Contract(address, faucetABI, provider);\n        setWeb3Api({\n          provider,\n          contract,\n        });\n      } else {\n        console.log(\"Please install metamask\");\n      }\n    };\n\n    loadProvider();\n  }, []);\n\n  useEffect(() => {\n    const getAccounts = async () => {\n      const accounts = await web3Api.provider.getSigner().getAddress();\n      console.log(\"2\");\n      setAccount(accounts);\n    };\n\n    // Will only run once the ETHERS.JS provider is loaded.\n    web3Api.provider && getAccounts();\n  }, [web3Api.provider]);\n\n  useEffect(() => {\n    const loadBalance = async () => {\n      console.log(3);\n      const balance = await web3Api.provider.getBalance(address);\n      setBalance(ethers.utils.formatEther(balance));\n    };\n\n    // Will only run once the contract is loaded.\n    web3Api.contract && loadBalance();\n  }, [web3Api]);\n\n  // changes the function only when web3Api changes otherwise uses the cached version\n  const addFunds = useCallback(async () => {\n    const signer = await web3Api.provider.getSigner();\n    const FaucetContract = new ethers.Contract(address, faucetABI, signer);\n    await FaucetContract.addFunds({\n      from: signer.getAddress(),\n      value: \"700000000000000000\",\n    });\n  }, [web3Api, address, faucetABI]);\n\n  return (\n    <>\n      <div className=\"h-full flex justify-center items-center bg-slate-200\">\n        <div>\n          <div>\n            <span className=\"mr-2\">Account:</span>\n            {account ? (\n              account\n            ) : (\n              <button\n                onClick={async () => {\n                  await web3Api.provider.send(\"eth_requestAccounts\", []);\n                }}\n                className=\"connectButton\"\n              >\n                Connect Wallet\n              </button>\n            )}\n          </div>\n          <div className=\"text-[36px]\">\n            Current Balance - <strong>{balance}</strong> ETH\n          </div>\n\n          <button\n            onClick={addFunds}\n            className=\"actionButton bg-green-200 hover:bg-green-500 text-green-500 \"\n          >\n            Donate\n          </button>\n          <button className=\"actionButton bg-red-200 hover:bg-red-500  text-red-500 \">\n            Withdraw\n          </button>\n        </div>\n      </div>\n      )\n    </>\n  );\n}\n\n// <div className=\"flex items-center justify-center h-full\">\n//   <a\n//     className=\"bg-gray-800 hover:bg-gray-700 border-b-4 border-black hover:border-gray-800 text-white text-center py-2 px-4 rounded\"\n//     rel=\"noreferrer\"\n//     href=\"https://metamask.io/download\"\n//     target=\"_blank\"\n//   >\n//     Install Metamask\n//   </a>\n// </div>;\n"]},"metadata":{},"sourceType":"module"}