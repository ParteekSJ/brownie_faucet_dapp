{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\parte\\\\Desktop\\\\Ethereum Projects\\\\faucet3_brownie\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useCallback } from \"react\";\nimport map from \"./artifacts/deployments/map.json\";\nimport FaucetArtifact from \"./artifacts/contracts/Faucet.json\";\nimport { ethers } from \"ethers\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\n/**\n * 1. Read about useCallback\n * 2. Catch errors in Promise\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const address = map[1337][\"Faucet\"][0];\n  const faucetABI = FaucetArtifact.abi;\n  const [web3Api, setWeb3Api] = useState({\n    provider: null,\n    contract: null,\n    isProviderLoaded: false\n  });\n  const [account, setAccount] = useState(null);\n  const [balance, setBalance] = useState(null);\n  const [shouldReload, reload] = useState(false); // Toggles whether to reload component or not\n\n  const reloadEffect = useCallback(() => reload(!shouldReload), [shouldReload]);\n\n  function timeout(delay) {\n    return new Promise(res => setTimeout(res, delay));\n  }\n\n  useEffect(() => {\n    const loadProvider = async () => {\n      console.log(\"1\");\n      let detectProvider = await detectEthereumProvider();\n\n      if (detectProvider) {\n        setAccountListener(detectProvider);\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const contract = new ethers.Contract(address, faucetABI, provider);\n        setWeb3Api({\n          provider,\n          contract,\n          isProviderLoaded: true\n        });\n      } else {\n        console.log(\"Please install metamask\");\n      }\n    };\n\n    loadProvider();\n  }, []);\n  useEffect(() => {\n    const getAccounts = async () => {\n      const accounts = await web3Api.provider.getSigner().getAddress();\n      console.log(\"2\");\n      setAccount(accounts);\n    }; // Will only run once the ETHERS.JS provider is loaded.\n\n\n    web3Api.provider && getAccounts();\n  }, [web3Api.provider]);\n  useEffect(() => {\n    const loadBalance = async () => {\n      console.log(3);\n      const balance = await web3Api.provider.getBalance(address);\n      setBalance(ethers.utils.formatEther(balance));\n    }; // Will only run once the contract is loaded.\n\n\n    web3Api.contract && loadBalance();\n  }, [web3Api, shouldReload]); // changes the function only when web3Api changes otherwise uses the cached version\n\n  const addFunds = useCallback(async () => {\n    const signer = await web3Api.provider.getSigner();\n    const FaucetContract = new ethers.Contract(address, faucetABI, signer);\n    const tX = await FaucetContract.addFunds({\n      from: signer.getAddress(),\n      value: \"1000000000000000000\"\n    });\n    await tX.wait();\n    reloadEffect();\n  }, [web3Api, reloadEffect]);\n\n  const withdrawEth = async () => {\n    const signer = await web3Api.provider.getSigner();\n    const FaucetContract = new ethers.Contract(address, faucetABI, signer);\n    const tX = await FaucetContract.withdrawFunds(500000000000000000n, {\n      from: signer.getAddress()\n    });\n    await tX.wait();\n    reloadEffect();\n  };\n\n  const setAccountListener = provider => {\n    provider.on(\"accountsChanged\", _ => window.location.reload());\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [window.ethereum ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-full flex justify-center items-center bg-slate-200\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mr-2\",\n            children: \"Account:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), account ? account : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: async () => {\n              await web3Api.provider.send(\"eth_requestAccounts\", []);\n            },\n            className: \"connectButton\",\n            children: \"Connect Wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-[36px]\",\n          children: [\"Current Balance - \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: balance\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 33\n          }, this), \" ETH\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !account,\n          onClick: addFunds,\n          className: \"actionButton bg-green-200 hover:bg-green-500 text-green-500 disabled:cursor-not-allowed disabled:bg-gray-500 disabled:text-gray-600\",\n          children: \"Donate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !account,\n          onClick: withdrawEth,\n          className: \"actionButton bg-red-200 hover:bg-red-500  text-red-500 disabled:cursor-not-allowed disabled:bg-gray-500 disabled:text-gray-600\",\n          children: \"Withdraw\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center h-full\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"bg-gray-800 hover:bg-gray-700 border-b-4 border-black hover:border-gray-800 text-white text-center py-2 px-4 rounded\",\n        rel: \"noreferrer\",\n        href: \"https://metamask.io/download\",\n        target: \"_blank\",\n        children: \"Install Metamask\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this), \")\"]\n  }, void 0, true);\n}\n\n_s(App, \"j06zwO8URxkUVOzuDAnRWvUNQs8=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/parte/Desktop/Ethereum Projects/faucet3_brownie/client/src/App.js"],"names":["useEffect","useState","useCallback","map","FaucetArtifact","ethers","detectEthereumProvider","App","address","faucetABI","abi","web3Api","setWeb3Api","provider","contract","isProviderLoaded","account","setAccount","balance","setBalance","shouldReload","reload","reloadEffect","timeout","delay","Promise","res","setTimeout","loadProvider","console","log","detectProvider","setAccountListener","providers","Web3Provider","window","ethereum","Contract","getAccounts","accounts","getSigner","getAddress","loadBalance","getBalance","utils","formatEther","addFunds","signer","FaucetContract","tX","from","value","wait","withdrawEth","withdrawFunds","on","_","location","send"],"mappings":"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","sourcesContent":["import { useEffect, useState, useCallback } from \"react\";\nimport map from \"./artifacts/deployments/map.json\";\nimport FaucetArtifact from \"./artifacts/contracts/Faucet.json\";\nimport { ethers } from \"ethers\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\n\n/**\n * 1. Read about useCallback\n * 2. Catch errors in Promise\n */\n\nexport default function App() {\n  const address = map[1337][\"Faucet\"][0];\n  const faucetABI = FaucetArtifact.abi;\n  const [web3Api, setWeb3Api] = useState({\n    provider: null,\n    contract: null,\n    isProviderLoaded: false,\n  });\n\n  const [account, setAccount] = useState(null);\n  const [balance, setBalance] = useState(null);\n  const [shouldReload, reload] = useState(false);\n\n  // Toggles whether to reload component or not\n  const reloadEffect = useCallback(() => reload(!shouldReload), [shouldReload]);\n\n  function timeout(delay) {\n    return new Promise((res) => setTimeout(res, delay));\n  }\n\n  useEffect(() => {\n    const loadProvider = async () => {\n      console.log(\"1\");\n      let detectProvider = await detectEthereumProvider();\n\n      if (detectProvider) {\n        setAccountListener(detectProvider);\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const contract = new ethers.Contract(address, faucetABI, provider);\n        setWeb3Api({\n          provider,\n          contract,\n          isProviderLoaded: true,\n        });\n      } else {\n        console.log(\"Please install metamask\");\n      }\n    };\n\n    loadProvider();\n  }, []);\n\n  useEffect(() => {\n    const getAccounts = async () => {\n      const accounts = await web3Api.provider.getSigner().getAddress();\n      console.log(\"2\");\n      setAccount(accounts);\n    };\n\n    // Will only run once the ETHERS.JS provider is loaded.\n    web3Api.provider && getAccounts();\n  }, [web3Api.provider]);\n\n  useEffect(() => {\n    const loadBalance = async () => {\n      console.log(3);\n      const balance = await web3Api.provider.getBalance(address);\n      setBalance(ethers.utils.formatEther(balance));\n    };\n\n    // Will only run once the contract is loaded.\n    web3Api.contract && loadBalance();\n  }, [web3Api, shouldReload]);\n\n  // changes the function only when web3Api changes otherwise uses the cached version\n  const addFunds = useCallback(async () => {\n    const signer = await web3Api.provider.getSigner();\n    const FaucetContract = new ethers.Contract(address, faucetABI, signer);\n    const tX = await FaucetContract.addFunds({\n      from: signer.getAddress(),\n      value: \"1000000000000000000\",\n    });\n\n    await tX.wait();\n    reloadEffect();\n  }, [web3Api, reloadEffect]);\n\n  const withdrawEth = async () => {\n    const signer = await web3Api.provider.getSigner();\n    const FaucetContract = new ethers.Contract(address, faucetABI, signer);\n    const tX = await FaucetContract.withdrawFunds(500000000000000000n, {\n      from: signer.getAddress(),\n    });\n    await tX.wait();\n    reloadEffect();\n  };\n\n  const setAccountListener = (provider) => {\n    provider.on(\"accountsChanged\", (_) => window.location.reload());\n  };\n\n  return (\n    <>\n      {window.ethereum ? (\n        <div className=\"h-full flex justify-center items-center bg-slate-200\">\n          <div>\n            <div>\n              <span className=\"mr-2\">Account:</span>\n              {account ? (\n                account\n              ) : (\n                <button\n                  onClick={async () => {\n                    await web3Api.provider.send(\"eth_requestAccounts\", []);\n                  }}\n                  className=\"connectButton\"\n                >\n                  Connect Wallet\n                </button>\n              )}\n            </div>\n            <div className=\"text-[36px]\">\n              Current Balance - <strong>{balance}</strong> ETH\n            </div>\n\n            <button\n              disabled={!account}\n              onClick={addFunds}\n              className=\"actionButton bg-green-200 hover:bg-green-500 text-green-500 disabled:cursor-not-allowed disabled:bg-gray-500 disabled:text-gray-600\"\n            >\n              Donate\n            </button>\n            <button\n              disabled={!account}\n              onClick={withdrawEth}\n              className=\"actionButton bg-red-200 hover:bg-red-500  text-red-500 disabled:cursor-not-allowed disabled:bg-gray-500 disabled:text-gray-600\"\n            >\n              Withdraw\n            </button>\n          </div>\n        </div>\n      ) : (\n        <div className=\"flex items-center justify-center h-full\">\n          <a\n            className=\"bg-gray-800 hover:bg-gray-700 border-b-4 border-black hover:border-gray-800 text-white text-center py-2 px-4 rounded\"\n            rel=\"noreferrer\"\n            href=\"https://metamask.io/download\"\n            target=\"_blank\"\n          >\n            Install Metamask\n          </a>\n        </div>\n      )}\n      )\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}