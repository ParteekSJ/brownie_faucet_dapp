{
  "abi": [
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "3": "contracts/Owned.sol"
  },
  "ast": {
    "absolutePath": "contracts/Owned.sol",
    "exportedSymbols": {
      "Owned": [
        245
      ]
    },
    "id": 246,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 228,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:3"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 245,
        "linearizedBaseContracts": [
          245
        ],
        "name": "Owned",
        "nameLocation": "66:5:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 232,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "93:5:3",
            "nodeType": "VariableDeclaration",
            "scope": 245,
            "src": "78:33:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 229,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "78:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "expression": {
                "id": 230,
                "name": "msg",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -15,
                "src": "101:3:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_message",
                  "typeString": "msg"
                }
              },
              "id": 231,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "memberName": "sender",
              "nodeType": "MemberAccess",
              "src": "101:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 243,
              "nodeType": "Block",
              "src": "139:145:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 235,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "170:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "170:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 237,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 232,
                          "src": "184:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "170:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546869732066756e6374696f6e206973207265737472696374656420746f2074686520636f6e74726163742773206f776e6572",
                        "id": 239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "203:53:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f60fe2d9d123295bf92ecf95167f1fa709e374da35e4c083bd39dc2d82acd8b1",
                          "typeString": "literal_string \"This function is restricted to the contract's owner\""
                        },
                        "value": "This function is restricted to the contract's owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f60fe2d9d123295bf92ecf95167f1fa709e374da35e4c083bd39dc2d82acd8b1",
                          "typeString": "literal_string \"This function is restricted to the contract's owner\""
                        }
                      ],
                      "id": 234,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "149:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "149:117:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 241,
                  "nodeType": "ExpressionStatement",
                  "src": "149:117:3"
                },
                {
                  "id": 242,
                  "nodeType": "PlaceholderStatement",
                  "src": "276:1:3"
                }
              ]
            },
            "id": 244,
            "name": "onlyOwner",
            "nameLocation": "127:9:3",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 233,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "136:2:3"
            },
            "src": "118:166:3",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 246,
        "src": "57:229:3",
        "usedErrors": []
      }
    ],
    "src": "32:255:3"
  },
  "bytecode": "6080604052600080546001600160a01b03191633179055348015602157600080fd5b506091806100306000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80638da5cb5b14602d575b600080fd5b600054603f906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f3fea264697066735822122043294403dbe10f8af01c073ad49809b3698c69fb29c02312cea566408e31c62064736f6c63430008070033",
  "bytecodeSha1": "715009eb4ce6268afa0d3a13796cb41099101454",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.7+commit.e28d00a7"
  },
  "contractName": "Owned",
  "coverageMap": {
    "branches": {
      "3": {}
    },
    "statements": {
      "3": {}
    }
  },
  "dependencies": [],
  "deployedBytecode": "6080604052348015600f57600080fd5b506004361060285760003560e01c80638da5cb5b14602d575b600080fd5b600054603f906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f3fea264697066735822122043294403dbe10f8af01c073ad49809b3698c69fb29c02312cea566408e31c62064736f6c63430008070033",
  "deployedSourceMap": "57:229:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;78:33;;;;;-1:-1:-1;;;;;78:33:3;;;;;;-1:-1:-1;;;;;178:32:4;;;160:51;;148:2;133:18;78:33:3;;;;;;",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    57,
    286
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x3F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0x29 DIFFICULTY SUB 0xDB 0xE1 0xF DUP11 CREATE SHR SMOD GASPRICE 0xD4 SWAP9 MULMOD 0xB3 PUSH10 0x8C69FB29C02312CEA566 BLOCKHASH DUP15 BALANCE 0xC6 KECCAK256 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        57,
        286
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        57,
        286
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        57,
        286
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5": {
      "fn": null,
      "offset": [
        57,
        286
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "6": {
      "fn": null,
      "offset": [
        57,
        286
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7": {
      "fn": null,
      "offset": [
        57,
        286
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8": {
      "fn": null,
      "offset": [
        57,
        286
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "10": {
      "fn": null,
      "offset": [
        57,
        286
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "11": {
      "fn": null,
      "offset": [
        57,
        286
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "13": {
      "fn": null,
      "offset": [
        57,
        286
      ],
      "op": "DUP1",
      "path": "3"
    },
    "14": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        57,
        286
      ],
      "op": "REVERT",
      "path": "3"
    },
    "15": {
      "fn": null,
      "offset": [
        57,
        286
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "16": {
      "fn": null,
      "offset": [
        57,
        286
      ],
      "op": "POP",
      "path": "3"
    },
    "17": {
      "fn": null,
      "offset": [
        57,
        286
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "19": {
      "fn": null,
      "offset": [
        57,
        286
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "20": {
      "fn": null,
      "offset": [
        57,
        286
      ],
      "op": "LT",
      "path": "3"
    },
    "21": {
      "fn": null,
      "offset": [
        57,
        286
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x28"
    },
    "23": {
      "fn": null,
      "offset": [
        57,
        286
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "24": {
      "fn": null,
      "offset": [
        57,
        286
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "26": {
      "fn": null,
      "offset": [
        57,
        286
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "27": {
      "fn": null,
      "offset": [
        57,
        286
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "29": {
      "fn": null,
      "offset": [
        57,
        286
      ],
      "op": "SHR",
      "path": "3"
    },
    "30": {
      "fn": null,
      "offset": [
        57,
        286
      ],
      "op": "DUP1",
      "path": "3"
    },
    "31": {
      "fn": null,
      "offset": [
        57,
        286
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8DA5CB5B"
    },
    "36": {
      "fn": null,
      "offset": [
        57,
        286
      ],
      "op": "EQ",
      "path": "3"
    },
    "37": {
      "fn": null,
      "offset": [
        57,
        286
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2D"
    },
    "39": {
      "fn": null,
      "offset": [
        57,
        286
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "40": {
      "fn": null,
      "offset": [
        57,
        286
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "41": {
      "fn": null,
      "offset": [
        57,
        286
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "43": {
      "fn": null,
      "offset": [
        57,
        286
      ],
      "op": "DUP1",
      "path": "3"
    },
    "44": {
      "first_revert": true,
      "fn": null,
      "offset": [
        57,
        286
      ],
      "op": "REVERT",
      "path": "3"
    },
    "45": {
      "offset": [
        78,
        111
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "46": {
      "fn": null,
      "offset": [
        78,
        111
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "48": {
      "fn": null,
      "offset": [
        78,
        111
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "49": {
      "fn": null,
      "offset": [
        78,
        111
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3F"
    },
    "51": {
      "fn": null,
      "offset": [
        78,
        111
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "52": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "54": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "56": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "58": {
      "op": "SHL"
    },
    "59": {
      "op": "SUB"
    },
    "60": {
      "offset": [
        78,
        111
      ],
      "op": "AND",
      "path": "3"
    },
    "61": {
      "fn": null,
      "offset": [
        78,
        111
      ],
      "op": "DUP2",
      "path": "3"
    },
    "62": {
      "fn": null,
      "offset": [
        78,
        111
      ],
      "op": "JUMP",
      "path": "3"
    },
    "63": {
      "fn": null,
      "offset": [
        78,
        111
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "64": {
      "fn": null,
      "offset": [
        78,
        111
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "66": {
      "fn": null,
      "offset": [
        78,
        111
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "67": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "69": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "71": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "73": {
      "op": "SHL"
    },
    "74": {
      "op": "SUB"
    },
    "75": {
      "op": "SWAP1"
    },
    "76": {
      "op": "SWAP2"
    },
    "77": {
      "op": "AND"
    },
    "78": {
      "op": "DUP2"
    },
    "79": {
      "op": "MSTORE"
    },
    "80": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "82": {
      "op": "ADD"
    },
    "83": {
      "offset": [
        78,
        111
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "85": {
      "fn": null,
      "offset": [
        78,
        111
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "86": {
      "fn": null,
      "offset": [
        78,
        111
      ],
      "op": "DUP1",
      "path": "3"
    },
    "87": {
      "fn": null,
      "offset": [
        78,
        111
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "88": {
      "fn": null,
      "offset": [
        78,
        111
      ],
      "op": "SUB",
      "path": "3"
    },
    "89": {
      "fn": null,
      "offset": [
        78,
        111
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "90": {
      "fn": null,
      "offset": [
        78,
        111
      ],
      "op": "RETURN",
      "path": "3"
    }
  },
  "sha1": "f8a02d7c1beb5b6a02da2a5279fd986170398c31",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\ncontract Owned {\n    address public owner = msg.sender;\n\n    modifier onlyOwner() {\n        require(\n            msg.sender == owner,\n            \"This function is restricted to the contract's owner\"\n        );\n        _;\n    }\n}\n",
  "sourceMap": "57:229:3:-:0;;;78:33;;;-1:-1:-1;;;;;;78:33:3;101:10;78:33;;;57:229;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Owned.sol",
  "type": "contract"
}